## Flood Folder Summary

This document provides a textual summary of the contents and purpose of the `flood` folder.

### Overview

The `flood` folder contains a focused demonstration of the HawkEYE Ultimate Flood Intelligence system. This demo focuses on a specific flood event in Sylhet, Bangladesh (2022), showcasing the use of multi-modal satellite data (SAR, Optical, DEM) and an advanced Vision Transformer (SegFormer) model for accurate flood detection and visualization.

### Folder Structure

- **`01_demo_data_pull.py`**: A Python script responsible for acquiring raw satellite imagery and Digital Elevation Model (DEM) data from Google Earth Engine for the specified flood event.
- **`02_demo_model_train.py`**: The main Python script that handles model training, prediction, and asset generation for the demo.
- **`demo_assets/`**: Contains various visual outputs generated by the demo:
  - **`charts/`**: Includes `loss_curve.png` (showing training progress) and `flood_explainer_grid.png` (a visualization of the analysis process).
  - **`hero/`**: Contains `final_mask.png` (the raw flood detection mask) and `prediction_overlay.png` (the flood prediction overlaid on the original image).
  - **`maps/`**: Includes `prediction_heatmap.png` (a heatmap of flood probability).
- **`demo_data_raw/`**: Stores the raw `.npy` satellite data (Sentinel-1 pre-flood, Sentinel-1 flood, Sentinel-2 flood) and DEM data pulled by `01_demo_data_pull.py`.
- **`demo_models/`**: Contains the trained flood detection model (`hawkeye_flood_model.pt`).
- **`generate_flood_explainer.py`**: A Python script to generate the `flood_explainer_grid.png` for explaining the flood detection process.
- **`model_report_flood_ultimate.json`**: A JSON file summarizing the model's metadata and quantitative/qualitative results.

### Key Documents and Scripts

1.  **`model_report_flood_ultimate.json`**: This JSON report provides a concise summary of the flood detection model:
    - **Model**: HawkEYE Ultimate Flood Intelligence (hawkeye-flood-ultimate-v1).
    - **Key Insight**: The model successfully identified inundated areas by fusing SAR change detection and optical imagery.
    - **Confidence**: High, based on multi-modal data fusion and spatial consistency.
    - **Artifacts**: Links to generated images like the loss curve, prediction overlay, and heatmap.

2.  **`01_demo_data_pull.py`**: This script connects to Google Earth Engine (GCP_PROJECT = "hyperion-472805") to download multi-modal satellite data (Sentinel-1 SAR, Sentinel-2 Optical, and SRTM DEM) for the Sylhet, Bangladesh (2022) flood event. It saves these as `.npy` files in `demo_data_raw/`.

3.  **`02_demo_model_train.py`**: This is the core script for the demo, performing the following steps:
    - **Data Preparation**: Loads and normalizes raw data, creates a pseudo flood mask for training, and tiles the data for input to the model.
    - **Model Training**: Trains a `HawkEYEModel` (based on SegFormer-B2-lite) for semantic segmentation of flood areas. It logs training and validation loss and saves the trained model (`hawkeye_flood_model.pt`).
    - **Asset Generation**: Generates visual outputs including `final_mask.png`, `prediction_heatmap.png`, and `prediction_overlay.png` to visualize the flood detection results.
    - **Report Generation**: Updates `model_report_flood_ultimate.json` with the estimated flood area percentage and links to the generated visual artifacts.

### Summary of Outputs

- **Trained Model**: `hawkeye_flood_model.pt` (a SegFormer-B2-lite model).
- **Visualizations**:
  - **`loss_curve.png`**: Illustrates the model's training and validation loss over epochs.
  - **`final_mask.png`**: A binary image showing the detected flood extent.
  - **`prediction_heatmap.png`**: A color-coded map indicating the probability of flooding.
  - **`prediction_overlay.png`**: A combined image showing the detected flood areas overlaid on a true-color satellite image.
- **Textual Report**: `model_report_flood_ultimate.json` provides a structured summary of the model, its insights, and links to all generated assets.
